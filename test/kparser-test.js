var syntax = require(".."),
    assert = require("assert"),
    test = require("./common").testKParse;

describe('BemhtmlKParser', function() {

  it('should parse multiple templates', function() {
    test(function () {/*
       block b-wrapper {
         tag: 'wrap'
         content: this.ctx.content
       }

       block b-inner, default: applyCtx({ block: 'b-wrapper', content: this.ctx.content })
                */},
         [ 'stmts',
           [ 'stmt',
             [ 'spacesAndComments', [ [ 'spaces', '\n       ' ] ] ],
             [ 'template',
               [ [ 'commaList',
                   [ 'pred',
                     [ 'block',
                       [ [ 'spacesAndComments', [] ],
                         [ 'name', 'block' ],
                         [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                         [ 'value', [ 'string', 'b-wrapper' ] ],
                         [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ] ] ] ] ],
                 [ 'spacesAndComments', [] ],
                 [ 'templateBlock',
                   [ 'stmts',
                     [ 'stmt',
                       [ 'spacesAndComments', [ [ 'spaces', '\n         ' ] ] ],
                       [ 'template',
                         [ [ 'commaList',
                             [ 'pred',
                               [ 'stdMode',
                                 [ 'spacesAndComments', [] ],
                                 [ 'name', 'tag' ],
                                 [ 'spacesAndComments', [] ] ] ] ],
                           [ 'spacesAndComments', [] ],
                           [ 'body',
                             [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                               [ 'literal', [ 'string', '\'', [ 'w', 'r', 'a', 'p' ] ] ],
                               [ 'spacesAndComments', [ [ 'spaces', '\n         ' ] ] ] ] ] ] ],
                       [ 'stmtEnd' ],
                       [ 'spacesAndComments', [] ] ],
                     [ 'stmt',
                       [ 'spacesAndComments', [] ],
                       [ 'template',
                         [ [ 'commaList',
                             [ 'pred',
                               [ 'stdMode',
                                 [ 'spacesAndComments', [] ],
                                 [ 'name', 'content' ],
                                 [ 'spacesAndComments', [] ] ] ] ],
                           [ 'spacesAndComments', [] ],
                           [ 'body',
                             [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                               [ 'getExprDot',
                                 [ 'getExprDot',
                                   [ 'keyword', 'this' ],
                                   [ 'spacesAndComments', [] ],
                                   [ 'spacesAndComments', [] ],
                                   [ 'name', 'ctx' ] ],
                                 [ 'spacesAndComments', [] ],
                                 [ 'spacesAndComments', [] ],
                                 [ 'name', 'content' ] ],
                               [ 'spacesAndComments', [ [ 'spaces', '\n       ' ] ] ] ] ] ] ],
                       [ 'stmtEnd', [ 'spacesAndComments', [] ] ],
                       [ 'spacesAndComments', [] ] ] ] ] ] ],
             [ 'stmtEnd', [ 'spacesAndComments', [] ], '\n' ],
             [ 'spacesAndComments', [ [ 'spaces', '\n       ' ] ] ] ],
           [ 'stmt',
             [ 'spacesAndComments', [] ],
             [ 'template',
               [ [ 'commaList',
                   [ 'pred',
                     [ 'block',
                       [ [ 'spacesAndComments', [] ],
                         [ 'name', 'block' ],
                         [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                         [ 'value', [ 'string', 'b-inner' ] ],
                         [ 'spacesAndComments', [] ] ] ] ],
                   [ 'pred',
                     [ 'stdMode',
                       [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                       [ 'name', 'def' ],
                       [ 'spacesAndComments', [] ] ] ] ],
                 [ 'spacesAndComments', [] ],
                 [ 'body',
                   [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                     [ 'callExpr',
                       [ 'name', 'applyCtx' ],
                       [ 'spacesAndComments', [] ],
                       [ 'commaList',
                         [ 'arg',
                           [ 'spacesAndComments', [] ],
                           [ 'obj',
                             [ 'commaList',
                               [ 'objItem',
                                 [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                 [ 'name', 'block' ],
                                 [ 'spacesAndComments', [] ],
                                 [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                 [ 'string',
                                   '\'',
                                   [ 'b', '-', 'w', 'r', 'a', 'p', 'p', 'e', 'r' ] ],
                                 [ 'spacesAndComments', [] ] ],
                               [ 'objItem',
                                 [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                 [ 'name', 'content' ],
                                 [ 'spacesAndComments', [] ],
                                 [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                 [ 'getExprDot',
                                   [ 'getExprDot',
                                     [ 'keyword', 'this' ],
                                     [ 'spacesAndComments', [] ],
                                     [ 'spacesAndComments', [] ],
                                     [ 'name', 'ctx' ] ],
                                   [ 'spacesAndComments', [] ],
                                   [ 'spacesAndComments', [] ],
                                   [ 'name', 'content' ] ],
                                 [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ] ] ] ],
                           [ 'spacesAndComments', [] ] ] ] ],
                     [ 'spacesAndComments', [ [ 'spaces', '\n                ' ] ] ] ] ] ] ],
             [ 'stmtEnd', [ 'spacesAndComments', [] ] ],
             [ 'spacesAndComments', [] ] ] ]);
  });

  it('should parse deeply nested template', function() {
    test(function () {/*
       block b-link, elem e1 {
         tag: 'span'
         this.ctx.url {
           tag: 'a'
           attrs: { href: this.ctx.url }
           reset {
             attrs: { href: undefined }
           }
         }
       }
                */},
         [ 'stmts',
           [ 'stmt',
             [ 'spacesAndComments', [ [ 'spaces', '\n       ' ] ] ],
             [ 'template',
               [ [ 'commaList',
                   [ 'pred',
                     [ 'block',
                       [ [ 'spacesAndComments', [] ],
                         [ 'name', 'block' ],
                         [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                         [ 'value', [ 'string', 'b-link' ] ],
                         [ 'spacesAndComments', [] ] ] ] ],
                   [ 'pred',
                     [ 'elem',
                       [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                         [ 'name', 'elem' ],
                         [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                         [ 'value', [ 'string', 'e1' ] ],
                         [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ] ] ] ] ],
                 [ 'spacesAndComments', [] ],
                 [ 'templateBlock',
                   [ 'stmts',
                     [ 'stmt',
                       [ 'spacesAndComments', [ [ 'spaces', '\n         ' ] ] ],
                       [ 'template',
                         [ [ 'commaList',
                             [ 'pred',
                               [ 'stdMode',
                                 [ 'spacesAndComments', [] ],
                                 [ 'name', 'tag' ],
                                 [ 'spacesAndComments', [] ] ] ] ],
                           [ 'spacesAndComments', [] ],
                           [ 'body',
                             [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                               [ 'literal', [ 'string', '\'', [ 's', 'p', 'a', 'n' ] ] ],
                               [ 'spacesAndComments', [ [ 'spaces', '\n         ' ] ] ] ] ] ] ],
                       [ 'stmtEnd' ],
                       [ 'spacesAndComments', [] ] ],
                     [ 'stmt',
                       [ 'spacesAndComments', [] ],
                       [ 'template',
                         [ [ 'commaList',
                             [ 'pred',
                               [ 'custom',
                                 [ 'spacesAndComments', [] ],
                                 [ 'getExprDot',
                                   [ 'getExprDot',
                                     [ 'keyword', 'this' ],
                                     [ 'spacesAndComments', [] ],
                                     [ 'spacesAndComments', [] ],
                                     [ 'name', 'ctx' ] ],
                                   [ 'spacesAndComments', [] ],
                                   [ 'spacesAndComments', [] ],
                                   [ 'name', 'url' ] ],
                                 [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ] ] ] ],
                           [ 'spacesAndComments', [] ],
                           [ 'templateBlock',
                             [ 'stmts',
                               [ 'stmt',
                                 [ 'spacesAndComments', [ [ 'spaces', '\n           ' ] ] ],
                                 [ 'template',
                                   [ [ 'commaList',
                                       [ 'pred',
                                         [ 'stdMode',
                                           [ 'spacesAndComments', [] ],
                                           [ 'name', 'tag' ],
                                           [ 'spacesAndComments', [] ] ] ] ],
                                     [ 'spacesAndComments', [] ],
                                     [ 'body',
                                       [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                         [ 'literal', [ 'string', '\'', [ 'a' ] ] ],
                                         [ 'spacesAndComments', [ [ 'spaces', '\n           ' ] ] ] ] ] ] ],
                                 [ 'stmtEnd' ],
                                 [ 'spacesAndComments', [] ] ],
                               [ 'stmt',
                                 [ 'spacesAndComments', [] ],
                                 [ 'template',
                                   [ [ 'commaList',
                                       [ 'pred',
                                         [ 'stdMode',
                                           [ 'spacesAndComments', [] ],
                                           [ 'name', 'attrs' ],
                                           [ 'spacesAndComments', [] ] ] ] ],
                                     [ 'spacesAndComments', [] ],
                                     [ 'body',
                                       [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                         [ 'obj',
                                           [ 'commaList',
                                             [ 'objItem',
                                               [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                               [ 'name', 'href' ],
                                               [ 'spacesAndComments', [] ],
                                               [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                               [ 'getExprDot',
                                                 [ 'getExprDot',
                                                   [ 'keyword', 'this' ],
                                                   [ 'spacesAndComments', [] ],
                                                   [ 'spacesAndComments', [] ],
                                                   [ 'name', 'ctx' ] ],
                                                 [ 'spacesAndComments', [] ],
                                                 [ 'spacesAndComments', [] ],
                                                 [ 'name', 'url' ] ],
                                               [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ] ] ] ],
                                         [ 'spacesAndComments', [ [ 'spaces', '\n           ' ] ] ] ] ] ] ],
                                 [ 'stmtEnd' ],
                                 [ 'spacesAndComments', [] ] ],
                               [ 'stmt',
                                 [ 'spacesAndComments', [] ],
                                 [ 'template',
                                   [ [ 'commaList',
                                       [ 'pred',
                                         [ 'customMode',
                                           [ 'spacesAndComments', [] ],
                                           [ 'name', 'reset' ],
                                           [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ] ] ] ],
                                     [ 'spacesAndComments', [] ],
                                     [ 'templateBlock',
                                       [ 'stmts',
                                         [ 'stmt',
                                           [ 'spacesAndComments', [ [ 'spaces', '\n             ' ] ] ],
                                           [ 'template',
                                             [ [ 'commaList',
                                                 [ 'pred',
                                                   [ 'stdMode',
                                                     [ 'spacesAndComments', [] ],
                                                     [ 'name', 'attrs' ],
                                                     [ 'spacesAndComments', [] ] ] ] ],
                                               [ 'spacesAndComments', [] ],
                                               [ 'body',
                                                 [ [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                                   [ 'literal',
                                                     [ 'obj',
                                                       [ 'commaList',
                                                         [ 'objItem',
                                                           [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                                           [ 'name', 'href' ],
                                                           [ 'spacesAndComments', [] ],
                                                           [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ],
                                                           [ 'name', 'undefined' ],
                                                           [ 'spacesAndComments', [ [ 'spaces', ' ' ] ] ] ] ] ] ],
                                                   [ 'spacesAndComments', [ [ 'spaces', '\n           ' ] ] ] ] ] ] ],
                                           [ 'stmtEnd', [ 'spacesAndComments', [] ] ],
                                           [ 'spacesAndComments', [] ] ] ] ] ] ],
                                 [ 'stmtEnd', [ 'spacesAndComments', [] ], '\n' ],
                                 [ 'spacesAndComments', [ [ 'spaces', '         ' ] ] ] ] ] ] ] ],
                       [ 'stmtEnd', [ 'spacesAndComments', [] ], '\n' ],
                       [ 'spacesAndComments', [ [ 'spaces', '       ' ] ] ] ] ] ] ] ],
             [ 'stmtEnd', [ 'spacesAndComments', [] ], '\n' ],
             [ 'spacesAndComments', [ [ 'spaces', '                ' ] ] ] ] ]);
  });

});
